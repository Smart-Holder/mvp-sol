#
#  Panoramix v4 Oct 2019 
#  Decompiled source of 0xa5409ec958C83C3f309868babACA7c86DCB077c1
# 
#  Let's make the world open source 
# 

const name = 'Project Wyvern Proxy Registry'

def storage:
  owner is addr at storage 0
  delegateProxyImplementationAddress is addr at storage 1
  proxies is mapping of addr at storage 2
  pending is mapping of uint256 at storage 3
  stor4 is mapping of uint8 at storage 4
  DELAY_PERIOD is uint256 at storage 5
  initialAddressSet is uint8 at storage 6

def initialAddressSet(): # not payable
  return bool(initialAddressSet)

def pending(address _param1): # not payable
  return pending[_param1]

def contracts(address _param1): # not payable
  return bool(stor4[_param1])

def owner(): # not payable
  return owner

def delegateProxyImplementation(): # not payable
  return delegateProxyImplementationAddress

def proxies(address _param1): # not payable
  return proxies[_param1]

def DELAY_PERIOD(): # not payable
  return DELAY_PERIOD

#
#  Regular functions
#

def _fallback() payable: # default function
  revert

def renounceOwnership(): # not payable
  require owner == caller
  log OwnershipRenounced(address previousOwner=owner)
  owner = 0

def revokeAuthentication(address _addr): # not payable
  require owner == caller
  stor4[addr(_addr)] = 0

def grantInitialAuthentication(address _authAddress): # not payable
  require owner == caller
  require not initialAddressSet
  initialAddressSet = 1
  stor4[addr(_authAddress)] = 1

def transferOwnership(address _newOwner): # not payable
  require owner == caller
  require _newOwner
  log OwnershipTransferred(
        address previousOwner=owner,
        address newOwner=_newOwner)
  owner = _newOwner

def startGrantAuthentication(address _addr): # not payable
  require owner == caller
  require not stor4[addr(_addr)]
  require not pending[addr(_addr)]
  pending[addr(_addr)] = block.timestamp

def endGrantAuthentication(address _addr): # not payable
  require owner == caller
  require not stor4[addr(_addr)]
  require pending[addr(_addr)]
  require DELAY_PERIOD + pending[addr(_addr)] < block.timestamp
  pending[addr(_addr)] = 0
  stor4[addr(_addr)] = 1

def registerProxy(): # not payable
  require not proxies[caller]
  create contract with 0 wei
                  code: 0x608060405234801561001057600080fd5b506040516105d03803806105d08339810160409081528151602083015191830151909201610046836401000000006100e0810204565b61005882640100000000610102810204565b81600160a060020a03168160405180828051906020019080838360005b8381101561008d578181015183820152602001610075565b50505050905090810190601f1680156100ba5780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015156100d857600080fd5b505050610165565b60018054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a038281169116141561011d57600080fd5b60008054600160a060020a031916600160a060020a038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b61045c806101746000396000f3006080604052600436106100825763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663025313a281146100c85780633659cfe6146100f95780634555d5c91461011c5780634f1ef286146101435780635c60da1b1461019d5780636fde8202146101b2578063f1739cae146101c7575b600061008c6101e8565b9050600160a060020a03811615156100a357600080fd5b60405136600082376000803683855af43d806000843e8180156100c4578184f35b8184fd5b3480156100d457600080fd5b506100dd6101f7565b60408051600160a060020a039092168252519081900360200190f35b34801561010557600080fd5b5061011a600160a060020a0360043516610206565b005b34801561012857600080fd5b50610131610239565b60408051918252519081900360200190f35b60408051602060046024803582810135601f810185900485028601850190965285855261011a958335600160a060020a031695369560449491939091019190819084018382808284375094975061023e9650505050505050565b3480156101a957600080fd5b506100dd6101e8565b3480156101be57600080fd5b506100dd6102f2565b3480156101d357600080fd5b5061011a600160a060020a0360043516610301565b600054600160a060020a031690565b60006102016102f2565b905090565b61020e6101f7565b600160a060020a031633600160a060020a031614151561022d57600080fd5b61023681610391565b50565b600290565b6102466101f7565b600160a060020a031633600160a060020a031614151561026557600080fd5b61026e82610206565b30600160a060020a03168160405180828051906020019080838360005b838110156102a357818101518382015260200161028b565b50505050905090810190601f1680156102d05780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015156102ee57600080fd5b5050565b600154600160a060020a031690565b6103096101f7565b600160a060020a031633600160a060020a031614151561032857600080fd5b600160a060020a038116151561033d57600080fd5b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd96103666101f7565b60408051600160a060020a03928316815291841660208301528051918290030190a161023681610401565b600054600160a060020a03828116911614156103ac57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058205f26049bbc794226b505f589b2ee1130db54310d79dd8a635c6f6c61e305a7770000, caller, delegateProxyImplementationAddress, 96, 68, initialize(address torchRunner, address tokenAddress), caller, this.address, 0x608060405234801561001057600080fd5b506040516105d038038061 >> 256, Mask(32, -512, initialize(address torchRunner, address tokenAddress), caller, this.address, 0x608060405234801561001057600080fd5b506040516105d038038061) << 512
  if not create.new_address:
      revert with ext_call.return_data[0 len return_data.size]
  proxies[caller] = addr(create.new_address)
  return addr(create.new_address)

